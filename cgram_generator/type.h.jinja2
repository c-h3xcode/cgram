// AUTOGENERATED BY CGRAM_GENERATOR
// JINJA2 TEMPLATE: type.tpl.h

#ifndef CGRAM_TYPES_{{ type.name|upper }}_H
#define CGRAM_TYPES_{{ type.name|upper }}_H

#include <cJSON.h>
#include <stdbool.h>
#include <stdint.h>

#include "common.h"

{% for dependency in type.dependencies %}
#include "{{ dependency }}.h"
{ % endfor % }

newtype({{type.name}}){
  {% for field in type.fields %}
  {% if field.is_ctype %}
  {% if field.is_pointer %}
  {{field.type}} *{{field.name}};
  {% else %}
  {{field.type}} {{field.name}};
  {% endif %}
  {% else %}
  {% if field.is_pointer %}
  type({{field.type}}) *{{field.name}};
  {% else %}
  type({{field.type}}) {{field.name}};
  {% endif %}
  {% endif %}
  {% endfor %}
};
result_def({{type.name}});

type({{type.name}}) *cgram_{{type.name}}_parse(cJSON *json);
cJSON *cgram_{{type.name}}_to_json(type({{type.name}}) *self);

void cgram_{{type.name}}_free(type({{type.name}}) *self);

#endif
