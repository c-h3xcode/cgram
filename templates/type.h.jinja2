// AUTOGENERATED BY CGRAM_GENERATOR
// API VERSION: {{ api.version }}
// API RELEASE DATE: {{ api.release_date }}
// API CHANGELOG: {{ api.changelog }}

#ifndef CGRAM_TYPES_{{ type.name|upper }}_H
#define CGRAM_TYPES_{{ type.name|upper }}_H

#include <cJSON.h>
#include <stdbool.h>
#include <stdint.h>

#include "../types_common.h"
#include "../cgram.h"

{% for dependency in type.dependencies %}
#include "{{ dependency }}.h"
{% endfor %}

newtype({{type.name}}){
  // AUTOGENERATED TYPE FIELDS
  {% for field in type.fields %}
  {% if field.type.cgram_type %}
  _inner_type({{field.type.name}}) {{"*" * field.type.pointer_deepness}}{{field.name}};
  {% else %}
  {{field.type.name}} {{"*" * field.type.pointer_deepness}}{{field.name}};
  {% endif %}
  {% endfor %}
};
result_def({{type.name}});

parse_func_def({{ type.name }});
parse_array_func_def({{ type.name }});
parse_array_array_func_def({{ type.name }});
cJSON *cgram_{{type.name}}_to_json(type({{type.name}}) *self);

void cgram_{{type.name}}_free(type({{type.name}}) *self);

#endif
